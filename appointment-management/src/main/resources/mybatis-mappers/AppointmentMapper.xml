<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.dljl.mapper.AppointmentMapper">

  <!-- Map the DB columns to the Appointment entity properties -->
  <resultMap id="appointmentResultMap" type="org.dljl.entity.Appointment">
    <id property="appointmentId" column="appointment_id"/>
    <result property="providerId" column="provider_id"/>
    <result property="userId" column="user_id"/>
    <result property="appointmentDateTime" column="appointment_date_time"/>
    <result property="status" column="status"/>
    <result property="serviceType" column="service_type"/>
    <result property="comments" column="comments"/>
  </resultMap>

  <!-- Create a new appointment and get the auto-generated appointmentId -->
  <insert id="createAppointment" parameterType="org.dljl.entity.Appointment" useGeneratedKeys="true" keyProperty="appointmentId">
    INSERT INTO appointments (provider_id, user_id, appointment_date_time, status, service_type, comments)
    VALUES (#{providerId}, #{userId}, #{appointmentDateTime}, #{status}, #{serviceType}, #{comments})
  </insert>

  <!-- Get appointment by ID using the resultMap -->
  <select id="getAppointment" resultMap="appointmentResultMap" parameterType="Long">
    SELECT appointment_id, provider_id, user_id, appointment_date_time, status, service_type, comments
    FROM appointments
    WHERE appointment_id = #{id}
  </select>

  <!-- Cancel an appointment by setting status to 'cancelled' -->
  <update id="cancelAppointment" parameterType="Long">
    UPDATE appointments
    SET status = 'cancelled'
    WHERE appointment_id = #{id}
  </update>

  <!-- Get all appointments by provider ID using the resultMap -->
  <select id="getAppointmentsByProviderId" resultMap="appointmentResultMap" parameterType="Long">
    SELECT appointment_id, provider_id, user_id, appointment_date_time, status, service_type, comments
    FROM appointments
    WHERE provider_id = #{providerId}
  </select>

  <!-- Update appointment. Only update fields that are provided in the DTO -->
  <update id="updateAppointment" parameterType="org.dljl.dto.UpdateAppointmentDTO">
    UPDATE appointments
    <set>
      <!-- Update only if status is provided -->
      <if test="status != null">
        status = #{status},
      </if>

      <!-- Update only if userId is provided -->
      <if test="userId != null">
        user_id = #{userId},
      </if>

      <!-- Update only if appointmentDateTime is provided -->
      <if test="appointmentDateTime != null">
        appointment_date_time = #{appointmentDateTime},
      </if>

      <!-- Update only if serviceType is provided -->
      <if test="serviceType != null">
        service_type = #{serviceType},
      </if>

      <!-- Update only if comments are provided -->
      <if test="comments != null">
        comments = #{comments},
      </if>
    </set>
    WHERE appointment_id = #{appointmentId}
  </update>

</mapper>
